// Generated by psc-bundle 0.7.3.0
var PS = { };
(function(exports) {
  /* global exports */
  "use strict";

  exports.foreachE = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];
  exports["foreachE"] = $foreign.foreachE;;
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  /* global exports, console */
  "use strict";

  // module Control.Monad.Eff.Console

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
 
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["log"] = $foreign.log;;
 
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Twitter


  var Twitter = require('twitter');

  exports.twitterClient = function(credentials) {
    return function() {
      return new Twitter(credentials);
    };
  };

  // This is a pretty bad hack to get rid of Nothing values and mimic fromJust.
  function cleanOptions(dirtyOptions) {
    var options = {};
    for (var key in dirtyOptions) {
      var value = dirtyOptions[key];
      if (typeof value != 'object') {
        options[key] = value;
      } else {
        if (value['value0']) {
          options[key] = value['value0'];
        }
      }
    }
    console.log(options);
    return options;
  }

  exports.search = function(client) {
    return function(searchOptions) {
      return function(callback) {
        return function() {
          client.get('search/tweets', cleanOptions(searchOptions), function(error, tweets, response){
            var results = [];
            if (tweets.statuses) {
              tweets.statuses.forEach(function(tweet) {
                results.push({
                  id : tweet.id_str,
                  user : tweet.user.screen_name,
                  text: tweet.text
                });
              });
            }
            callback(results)();
          });
        };
      };
    };
  };

  exports.retweet = function(client) {
    return function(tweetId) {
      return function() {
        client.post('statuses/retweet/' + tweetId, function(err, tweet, id) {
                  console.log(err || tweet.text);
        });
      };
    };
  };
 
})(PS["Control.Monad.Eff.Twitter"] = PS["Control.Monad.Eff.Twitter"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;;
 
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Twitter"];
  var Prelude = PS["Prelude"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var searchOptions = function (query) {
      return {
          q: query, 
          geocode: Data_Maybe.Nothing.value, 
          lang: Data_Maybe.Nothing.value, 
          locale: Data_Maybe.Nothing.value, 
          result_type: Data_Maybe.Nothing.value, 
          count: Data_Maybe.Nothing.value, 
          until: Data_Maybe.Nothing.value, 
          since_id: Data_Maybe.Nothing.value, 
          max_id: Data_Maybe.Nothing.value, 
          include_entities: Data_Maybe.Nothing.value
      };
  };
  exports["searchOptions"] = searchOptions;
  exports["retweet"] = $foreign.retweet;
  exports["search"] = $foreign.search;
  exports["twitterClient"] = $foreign.twitterClient;;
 
})(PS["Control.Monad.Eff.Twitter"] = PS["Control.Monad.Eff.Twitter"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Data_Traversable = PS["Data.Traversable"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Alt = PS["Control.Alt"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];
  exports["filter"] = $foreign.filter;;
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports["regex'"] = function (s1) {
    return function (s2) {
      return new RegExp(s1, s2);
    };
  };

  exports.test = function (r) {
    return function (s) {
      return r.test(s);
    };
  };
 
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Data.String.Regex"];
  var Prelude = PS["Prelude"];
  var Data_String = PS["Data.String"];
  var Data_Maybe = PS["Data.Maybe"];                                              
  var renderFlags = function (f) {
      return (function () {
          if (f.global) {
              return "g";
          };
          if (!f.global) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 63, column 1 - line 64, column 1: " + [ f.global.constructor.name ]);
      })() + ((function () {
          if (f.ignoreCase) {
              return "i";
          };
          if (!f.ignoreCase) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 63, column 1 - line 64, column 1: " + [ f.ignoreCase.constructor.name ]);
      })() + ((function () {
          if (f.multiline) {
              return "m";
          };
          if (!f.multiline) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 63, column 1 - line 64, column 1: " + [ f.multiline.constructor.name ]);
      })() + ((function () {
          if (f.sticky) {
              return "y";
          };
          if (!f.sticky) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 63, column 1 - line 64, column 1: " + [ f.sticky.constructor.name ]);
      })() + (function () {
          if (f.unicode) {
              return "u";
          };
          if (!f.unicode) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 63, column 1 - line 64, column 1: " + [ f.unicode.constructor.name ]);
      })())));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign["regex'"](s)(renderFlags(f));
      };
  };
  var noFlags = {
      global: false, 
      ignoreCase: false, 
      multiline: false, 
      sticky: false, 
      unicode: false
  };
  exports["noFlags"] = noFlags;
  exports["renderFlags"] = renderFlags;
  exports["regex"] = regex;
  exports["test"] = $foreign.test;;
 
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Control_Monad_Eff_Twitter = PS["Control.Monad.Eff.Twitter"];     
  var myCredentials = {
      consumer_key: "vBEnTMuHpHPbS833D1Pvy2t0x", 
      consumer_secret: "Hpu7ba3NOtq2ZYDOwkpmzR9l7K1BCuewbs9XBk57AsqcHUqv5P", 
      access_token_key: "4635054085-iOkHyBYGdQz3q8aGJaUWSawfYNgWmPXvalKyoAt", 
      access_token_secret: "wKEza6TbtFrWSXYYtV5voisEkK7g1STldl1eF5pNMKV32"
  };
  exports["myCredentials"] = myCredentials;;
 
})(PS["MyCredentials"] = PS["MyCredentials"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Data_Array = PS["Data.Array"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Twitter = PS["Control.Monad.Eff.Twitter"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var MyCredentials = PS["MyCredentials"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Maybe = PS["Data.Maybe"];     
  var retweetAll = function (client) {
      return function (regex) {
          return function (tweets) {
              var matchingTweets = (function () {
                  if (regex instanceof Data_Maybe.Just) {
                      return Data_Array.filter(function (tweet) {
                          return Data_String_Regex.test(regex.value0)(tweet.text);
                      })(tweets);
                  };
                  if (regex instanceof Data_Maybe.Nothing) {
                      return tweets;
                  };
                  throw new Error("Failed pattern match at Main line 20, column 5 - line 24, column 1: " + [ regex.constructor.name ]);
              })();
              return Control_Monad_Eff.foreachE(matchingTweets)(function (tweet) {
                  return function __do() {
                      Control_Monad_Eff_Twitter.retweet(client)(tweet.id)();
                      return Control_Monad_Eff_Console.log(tweet.text)();
                  };
              });
          };
      };
  };
  var main = (function () {
      var options = (function () {
          var _3 = {};
          for (var _4 in Control_Monad_Eff_Twitter.searchOptions("make \"great again\" -america -filter:retweets")) {
              if ((Control_Monad_Eff_Twitter.searchOptions("make \"great again\" -america -filter:retweets")).hasOwnProperty(_4)) {
                  _3[_4] = (Control_Monad_Eff_Twitter.searchOptions("make \"great again\" -america -filter:retweets"))[_4];
              };
          };
          _3.count = new Data_Maybe.Just(3);
          return _3;
      })();
      var flags = (function () {
          var _5 = {};
          for (var _6 in Data_String_Regex.noFlags) {
              if (Data_String_Regex.noFlags.hasOwnProperty(_6)) {
                  _5[_6] = Data_String_Regex.noFlags[_6];
              };
          };
          _5.ignoreCase = true;
          return _5;
      })();
      var regex = Data_Maybe.Just.create(Data_String_Regex.regex("make (.*) great again")(flags));
      return function __do() {
          var _0 = Control_Monad_Eff_Twitter.twitterClient(MyCredentials.myCredentials)();
          return Control_Monad_Eff_Twitter.search(_0)(options)(retweetAll(_0)(regex))();
      };
  })();
  exports["main"] = main;
  exports["retweetAll"] = retweetAll;;
 
})(PS["Main"] = PS["Main"] || {});

PS["Main"].main();
